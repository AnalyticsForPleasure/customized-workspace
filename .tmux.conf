# Put this file (.tmux.conf) in the current user’s home directory

# Attention: you should install "tmuxinator" too - for writing and 
# managing different tmux configurations.

# In this file we can do everything from defining new key shortcuts
# to setting up a default environment with multiple windows, panes,
# and running programs. Let’s start by setting a couple basic options 
# that will make working with tmux much easier.


# we’re using the -g switch, for “global,” which sets the option
# Setting the prefix from C-b to C-a for all tmux sessions we create:
set -g prefix C-a

# Freeing up Ctrl-b:
unbind C-b

# Sending the Prefix to Other Applications
bind C-a send-prefix

# for reloading this configuration file, in tmux you should 
# enter your prefix (Here it's C-a) and : , and then type 
# source-file ~/.tmux.conf

# Changing the Default Delay
# tmux adds a very small delay when sending commands, 
# and this delay can interfere with other programs such as the Vim text editor. 
# We can set this delay so it’s much more responsive:
set -g escape-time 1


# when we create more than one window in a session, 
# we reference windows by their index so I would like it to start from 1 and not Zero.
# This way you can use PREFIX 1 to jump to the first window instead of PREFIX 0.
#set -g base-index 1
set-option -g base-index 1

# The same logic I apply on panes using the pane-base-index option
# (So we have some consistency between our pane and window numbering).
set-window-option -g pane-base-index 1


# splitting panes
bind "|" split-window -h
bind "-" split-window -v

# Creating a Shortcut to Reload the Configuration
# we’ll set PREFIX r so it reloads our main .tmux.conf file in the current session.
unbind "r"
bind "r" source-file ~/.tmux.conf \; display "Reloaded configuration!"

bind "g" display "Gil You have pressed"

# Handling the mouse 
#setw -g mode-mouse on


# for Colour enter:
# wget http://www.vim.org/scripts/download_script.php?src_id=4568 -O colortest
# perl colortest -w


