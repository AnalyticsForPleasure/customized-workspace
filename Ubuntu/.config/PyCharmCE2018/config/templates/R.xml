<templateSet group="R">
  <template name="gcrtapply" value="# Description: tapply() is a very powerful function that l. by deafault we&#10;# simplify the result.&#10;# if we would like to get a list the fourth argument would be: simplify = FALSE.&#10;# Example below: Given a vector of numbers, one simple operation is to take group means.&#10;&#10;# Generating random numbers with different distributions&#10;$list$ &lt;- c(rnorm(10), runif(10), rnorm(10, 1)) &#10;# defining some groups&#10;$groups$&lt;- gl(3, 10) &#10;# Applying the mean function on each group&#10;res &lt;- tapply($list$, $groups$, $function$)" description="breaks a vector into GROUPS and then apply a function to each of the GROUPS" toReformat="false" toShortenFQNames="true">
    <variable name="list" expression="" defaultValue="&quot;my_list&quot;" alwaysStopAt="true" />
    <variable name="groups" expression="" defaultValue="&quot;groups&quot;" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="&quot;mean&quot;" alwaysStopAt="true" />
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gccomment" value="############################################################&#10;# Function name: $var$&#10;# Description:   $var2$&#10;# &#10;# Output:        $3$&#10;# Arguments:     $4$&#10;#&#10;#&#10;############################################################" description="R comment" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="&quot;Works?&quot;" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gcr-apply" value="# Description: Applys the function once on every column or row&#10;# First arg: Holds the data.&#10;# Second arg: Holds the column or row (row =1, col = 2)&#10;# Third arg: Aggregate function. &#10;my_data &lt;- matrix(1:12,3,4)&#10;result &lt;- apply(my_data,2,mean)" description="Apply" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-tapply" value="# Description: tapply() lets you break a vector into GROUPS and then apply some function to each of the GROUPS.&#10;# if we would like to get a list the fourth argument would be: simplify = FALSE.&#10;# Example below: Given a vector of numbers, one simple operation is to take group means.&#10;&#10;# Generating random numbers with different distributions&#10;my_list &lt;- c(rnorm(10), runif(10), rnorm(10, 1)) &#10;# defining some groups&#10;groups &lt;- gl(3, 10) &#10;# Applying the mean function on each group&#10;res &lt;- tapply(my_list, groups, mean)" description="Apply aggregate function on each subgroup" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-rapply" value="# Description: rapply aims to apply a function operation recursivley on nested structures&#10;# Example below: nested list (not preserving the original structure)&#10;&#10;x=list(1,list(2,3),4,list(5,list(6,7)))&#10;str(x)&#10;rapply(x,function(x){x^2},class=c(&quot;numeric&quot;))" description="apply a function operation recursivley on nested structures" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-filter" value="library(dplyr)&#10;my_data &lt;- data.frame(student_name = c(&quot;Gil&quot;,&quot;Shay&quot;,&quot;Itamar&quot;), grade = c(90,95,70));&#10;&#10;high_scores&lt;- filter(my_data, grade &gt;= 85)" description="Filter function" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-unique" value="library(dplyr)&#10;my_data &lt;- data.frame(student_name = c(&quot;Gil&quot;,&quot;Shay&quot;,&quot;Itamar&quot;,&quot;Gil&quot;),&#10;            grade = c(90,95,70,90));&#10;&#10;scores&lt;- unique(my_data)" description="unique" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-unite" value="library(tidyr)&#10;#### Example : Creating the dataframe - Input ######&#10;my_data &lt;- data.frame(City= c(&quot;Tel Aviv&quot;,&quot;Ramat Gan&quot;,&quot;New York&quot;),First_name=c(&quot;Gil&quot;,&quot;Shay&quot;,&quot;Itamar&quot;),Last_name=c(&quot;Tamari&quot;,&quot;Cohen&quot;,&quot;Skalim&quot;));&#10;&#10;###Concatenate between two columns#####&#10;res_1&lt;- unite(my_data,&quot;Full_name&quot;,First_name,Last_name,sep = &quot; &quot;)&#10;&#10;###Concatenate between three columns#####&#10;res_2  &lt;- unite(my_data,&quot;Full_name&quot;,First_name,Last_name,City ,sep = &quot; &quot;)" description="unite" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-seperate" value="library(tidyr)&#10;#### Example : Creating the dataframe - Input ######&#10;my_data &lt;- data.frame(City= c(&quot;Tel Aviv&quot;,&quot;Ramat Gan&quot;,&quot;New York&quot;),Full_name=c(&quot;Gil Tamar&quot;,&quot;Shay Cohen&quot;,&quot;Itamar Skalim&quot;));&#10;### Separate between two columns#####&#10;res_1 &lt;- separate(my_data, Full_name, c(&quot;First name&quot;,&quot;Last Name&quot;),sep = &quot; &quot;)" description="Sepearate column into multiple columns" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-init-matrix" value="# Initialize a matrix&#10;mat = matrix(data = c(1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3), nrow = 4, ncol = 3) # By column&#10;mat = matrix(data = c(1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3), nrow = 4, ncol = 3, byrow = TRUE) # By row&#10;" description="Init matrix" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gc-r-example" value="Works well" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gcr-bar-plot" value="library(ggplot2)&#10;my_df = data.frame(food_type = c('Fish', 'Beans', 'Yogurt', 'Apple', 'Lemon', 'Pineapple', 'Orange', 'Olive'),&#10;                   cost_for_1_KG = c(10.6, 5.8, 6.2, 5.4, 3.9, 4.1, 3.9, 7.56))&#10;&#10;g = ggplot(my_df, aes(x = food_type, y = cost_for_1_KG, fill = food_type)) +&#10;  ggtitle(&quot;The Average price for 1 KG among all markets&quot;) +&#10;  labs(y = &quot;Price per KG&quot;,&#10;       x = &quot;Food type&quot;) +&#10;  theme(plot.title = element_text(hjust = 0.5,&#10;                                  size = 25,&#10;                                  face = &quot;bold&quot;,&#10;                                  family = &quot;David&quot;),&#10;        axis.text.x = element_text(angle = 0)) +&#10;  geom_bar(stat = &quot;identity&quot;,&#10;           position = &quot;dodge&quot;,&#10;           colour = &quot;black&quot;,&#10;           width = .8) +&#10;  scale_y_continuous(breaks = seq(0, max(my_df$cost_for_1_KG), 2))&#10;g" description="Plot barplot with ggplot" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gcr-scatter-plot-simple1" value="g = ggplot(iris, aes(x = Petal.Length, y = Petal.Width)) +&#10;  ggtitle(&quot;Is there a correlation between Petal Width to Petal Length?&quot;) +&#10;  labs(y = &quot;Petal Width&quot;,&#10;       x = &quot;Petal Length&quot;) +&#10;  theme(plot.title = element_text(hjust = 0.5,&#10;                                  size = 25,&#10;                                  face = &quot;bold&quot;,&#10;                                  family = &quot;David&quot;)) +&#10;  geom_point(col = &quot;steelblue&quot;, size = 3)&#10;&#10;g" description="Plot basic scatter plot" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
  <template name="gcr-scatter-plot-simple2" value="library(ggplot2)&#10;g = ggplot(iris, aes(x = Petal.Length, y = Petal.Width)) +&#10;  ggtitle(&quot;Is there a correlation between Petal Width to Petal Length?&quot;) +&#10;  labs(y = &quot;Petal Width&quot;,&#10;       x = &quot;Petal Length&quot;) +&#10;  theme(plot.title = element_text(hjust = 0.5,&#10;                                  size = 25,&#10;                                  face = &quot;bold&quot;,&#10;                                  family = &quot;David&quot;)) +&#10;  geom_point(aes(col = Species), size = 3) +&#10;  scale_x_continuous(breaks = seq(0, max(iris$Petal.Length), 0.5)) +&#10;  scale_y_continuous(breaks = seq(0, max(iris$Petal.Width), 0.5))&#10;&#10;g" description="Plot scatter plot with category colors" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="R" value="true" />
    </context>
  </template>
</templateSet>