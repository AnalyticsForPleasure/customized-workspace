<templateSet group="python-other">
  <template name="gc-map" value="stuff = map(lambda w: [w.upper(), w.lower(), len(w)], words)" description="example of map" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="gc-unpack-dictionary-double-asterisk" value="date_info = {'year': &quot;2020&quot;, 'month': &quot;01&quot;, 'day': &quot;01&quot;}&#10;filename = &quot;{year}-{month}-{day}.txt&quot;.format(**date_info)&#10;print(filename)" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="gc-grid-parameters" value="from typing import Iterable, Any, Dict # List, Tuple, etc...&#10;from itertools import product&#10;&#10;def grid_parameters(parameters: Dict[str, Iterable[Any]]) -&gt; Iterable[Dict[str, Any]]:&#10;    for params in product(*parameters.values()):&#10;        yield dict(zip(parameters.keys(), params))&#10;&#10;&#10;parameters = {&quot;learning_rate&quot;: [0.1, 1, 2], &quot;penalty&quot;: [1, 2, 3]}&#10;&#10;for settings in grid_parameters(parameters):&#10;    print(settings)&#10;" description="Avoiding endless nested loops" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>